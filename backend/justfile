default:
    just --list

# Installs all CLI tools required for running the tests, and other just commands
install_clis:
    #!/usr/bin/env sh
    if ! command -v cargo-binstall >/dev/null 2>&1; then \
        echo "cargo-binstall is not installed. Installing it first..."; \
        curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash; \
    fi
    # Should be kept in sync with `docker-build.yml`
    cargo binstall cargo-nextest@0.9.88 sea-orm-cli@1.1.4

deploy_db:
    cd sqitch && ./deploy_distributed.sh --db-uri postgresql://eratouser:eratopw@localhost:5432/erato

# Generates the entity source files from a live DB connection
generate_db_schema:
    sea-orm-cli generate entity \
      -u postgres://eratouser:eratopw@localhost:5432/erato \
      -o src/db/entity \
      --ignore-tables changes,dependencies,events,projects,releases,tags

# Generates the OpenAPI spec based on the source
generate_open_api:
    cargo run --bin gen-openapi

# Generates the OpenAPI spec based on the source and check if it's up to date
generate_open_api_check:
    cargo run --bin gen-openapi -- --check

test:
    cargo nextest run --retries 2

test_policy:
    opa test --v1-compatible -v policy

lint:
    cargo clippy --all-targets --all-features
    cargo clippy --all-targets --no-default-features
    cargo clippy --all-targets --no-default-features --features=sentry
    cargo fmt --all --check

run:
    cargo run --bin erato

# Run the local services required for running app (Postgres and Ollama-smol)
run_local_services:
    ./run_postgres.sh
    ./run_ollama_smol.sh

format:
    cargo fmt --all
