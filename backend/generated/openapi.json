{
  "openapi": "3.1.0",
  "info": {
    "title": "",
    "description": "The main API structure\n\n- `/api/v1beta/` <- Most of the API is nested under here. All of the resources there are scoped to what is accessible by the authenticated identity.\n- `/api/v1beta/me` <- Everything under this path is scoped to the subject of the authenticated identity.\nThis means that the identity may be authorized to view more resources, but this is the default view for them.\nE.g. the chats route scoped under there will only list the chats created by the user, but the user may be authorized to also view chats shared by other users.\n",
    "version": ""
  },
  "paths": {
    "/api/v1beta/chats": {
      "get": {
        "tags": [],
        "operationId": "chats",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Chat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1beta/me/messages/submitstream": {
      "post": {
        "tags": [],
        "operationId": "message_submit_sse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageSubmitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSubmitStreamingResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "When no valid JWT token is provided"
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/api/v1beta/me/profile": {
      "get": {
        "tags": [],
        "operationId": "profile",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "description": "When no valid JWT token is provided"
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/api/v1beta/messages": {
      "get": {
        "tags": [],
        "operationId": "messages",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [],
        "summary": "Get health of the API.",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [],
        "summary": "Get health of the API.",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Chat": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "MessageSubmitRequest": {
        "type": "object",
        "required": [
          "user_message"
        ],
        "properties": {
          "previous_message_id": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid",
            "description": "The ID of the message that this message is a response to. If this is the first message in the chat, this should be empty.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "user_message": {
            "type": "string",
            "description": "The text of the message.",
            "example": "Hello, world!"
          }
        }
      },
      "MessageSubmitStreamingResponseMessage": {
        "oneOf": [
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSubmitStreamingResponseMessageTextDelta"
              },
              {
                "type": "object",
                "required": [
                  "message_type"
                ],
                "properties": {
                  "message_type": {
                    "type": "string",
                    "enum": [
                      "text_delta"
                    ]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageSubmitStreamingResponseMessageOther"
              },
              {
                "type": "object",
                "required": [
                  "message_type"
                ],
                "properties": {
                  "message_type": {
                    "type": "string",
                    "enum": [
                      "example_other"
                    ]
                  }
                }
              }
            ]
          }
        ]
      },
      "MessageSubmitStreamingResponseMessageOther": {
        "type": "object",
        "required": [
          "foo"
        ],
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      },
      "MessageSubmitStreamingResponseMessageTextDelta": {
        "type": "object",
        "required": [
          "new_text"
        ],
        "properties": {
          "new_text": {
            "type": "string"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "required": [
          "id",
          "preferred_language"
        ],
        "properties": {
          "email": {
            "type": [
              "string",
              "null"
            ],
            "description": "The user's email address. Shouldn't be used as a unique identifier, as it may change."
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The user's display name."
          },
          "picture": {
            "type": [
              "string",
              "null"
            ],
            "description": "The user's profile picture URL."
          },
          "preferred_language": {
            "type": "string",
            "description": "The user's preferred language.\n\nThe final determined language is intersected with our supported languages, to determine the final language.\n\nWill be a BCP 47 language tag (e.g. \"en\" or \"en-US\").\n\nThis is derived in the following order (highest priority first):\n- ID token claims\n- Browser Accept-Language header\n- Default to \"en\""
          }
        }
      }
    }
  }
}