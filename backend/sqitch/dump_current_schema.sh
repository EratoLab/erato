#!/bin/bash

# Exit on error
set -e

# Function to print usage
usage() {
    echo "Usage: $0 --db-uri <database_uri> [--output <output_file>] [--schema <schema_name>]"
    echo "Example: $0 --db-uri 'db:pg://user:pass@host:5432/dbname' --output schema_dump.sql"
    exit 1
}

# Parse arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --db-uri) DB_URI="$2"; shift ;;
        --output) OUTPUT_FILE="$2"; shift ;;
        --schema) SCHEMA_NAME="$2"; shift ;;
        --help) usage ;;
        *) usage ;;
    esac
    shift
done

# Check if DB_URI is provided
if [ -z "$DB_URI" ]; then
    usage
fi

# Set default output file if not provided
if [ -z "$OUTPUT_FILE" ]; then
    OUTPUT_FILE="current_schema.sql"
fi

# Set default schema if not provided
if [ -z "$SCHEMA_NAME" ]; then
    SCHEMA_NAME="public"
fi

echo "Dumping schema to $OUTPUT_FILE..."

# Convert db:pg:// format to postgresql:// if needed
PG_URI=$(echo "$DB_URI" | sed -E 's/^db:pg:/postgresql:/g')

# Extract connection parameters from URI
# This handles both formats:
# - db:pg://user:pass@host:5432/dbname
# - postgresql://user:pass@host:5432/dbname
DB_NAME=$(echo "$PG_URI" | sed -E 's/.*\/([^?]+).*/\1/')
DB_HOST=$(echo "$PG_URI" | sed -E 's/.*@([^:]+):.*/\1/')
DB_PORT=$(echo "$PG_URI" | sed -E 's/.*:([0-9]+)\/.*/\1/')
DB_USER=$(echo "$PG_URI" | sed -E 's/.*:\/\/([^:]+):.*/\1/')
DB_PASS=$(echo "$PG_URI" | sed -E 's/.*:\/\/[^:]+:([^@]+)@.*/\1/')

# Create temporary .pgpass file for passwordless connection
PGPASS_FILE=$(mktemp)
echo "$DB_HOST:$DB_PORT:$DB_NAME:$DB_USER:$DB_PASS" > "$PGPASS_FILE"
chmod 600 "$PGPASS_FILE"

# Export PGPASSFILE environment variable
export PGPASSFILE="$PGPASS_FILE"

# Create a temporary file for the schema dump
TEMP_DUMP_FILE=$(mktemp)

# Define tables to exclude
EXCLUDED_TABLES=("changes" "dependencies" "events" "projects" "releases" "tags")

# Build exclude-table options
EXCLUDE_OPTS=""
for table in "${EXCLUDED_TABLES[@]}"; do
    EXCLUDE_OPTS+=" --exclude-table=${SCHEMA_NAME}.${table}"
done

# Use pg_dump to dump the schema only (no data)
pg_dump -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" \
    --schema="$SCHEMA_NAME" --schema-only \
    --no-owner --no-privileges \
    --no-tablespaces --no-security-labels \
    --no-publications --no-subscriptions \
    $EXCLUDE_OPTS \
    -f "$TEMP_DUMP_FILE"

# Create the final file with header
{
    echo "-- ============================================================================"
    echo "-- Database Schema Dump"
    echo "-- Generated by dump_current_schema.sh"
    echo "-- Database: $DB_NAME"
    echo "-- Schema: $SCHEMA_NAME"
    echo "-- Excluded tables: ${EXCLUDED_TABLES[*]}"
    echo "-- ============================================================================"
    echo ""
    cat "$TEMP_DUMP_FILE"
} > "$OUTPUT_FILE"

# Remove temporary files
rm "$PGPASS_FILE" "$TEMP_DUMP_FILE"

echo "Schema successfully dumped to $OUTPUT_FILE"
echo "The file contains DDL instructions for the current database structure." 