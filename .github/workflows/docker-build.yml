name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'Dockerfile.combined'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'Dockerfile.combined'

env:
  REGISTRY: harbor.imassage.me
  BACKEND_IMAGE_NAME: erato/backend
  FRONTEND_IMAGE_NAME: erato/frontend
  COMBINED_IMAGE_NAME: erato/app
  SHA_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Harbor registry
        uses: docker/login-action@v1
        with:
          registry: harbor.imassage.me
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.SHA_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ env.SHA_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Combined image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.combined
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.COMBINED_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.COMBINED_IMAGE_NAME }}:${{ env.SHA_TAG }}
          build-args: |
            REGISTRY=${{ env.REGISTRY }}
            BACKEND_IMAGE=${{ env.BACKEND_IMAGE_NAME }}:${{ env.SHA_TAG }}
            FRONTEND_IMAGE=${{ env.FRONTEND_IMAGE_NAME }}:${{ env.SHA_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 