apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-erato-app
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: erato-app
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: erato-app
  template:
    metadata:
      labels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: erato-app
        app.kubernetes.io/app-version: {{ .Chart.AppVersion }}
    spec:
      {{- include "erato.imagePullSecrets" . | nindent 6 }}
      initContainers:
        - name: run-migrations
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          command: ["/bin/bash"]
          args:
            - "-c"
            - "cd /app/sqitch && ./deploy_distributed.sh --db-uri $DATABASE_URL"
          env:
            - name: ENVIRONMENT
              value: {{ .Values.global.environment | quote }}
            - name: DATABASE_URL
              {{- include "erato.postgresValueOrValueFrom" . | nindent 14 }}
          {{- if or .Values.backend.extraEnvVarsCM .Values.backend.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.backend.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.backend.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.backend.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.backend.extraEnvVarsSecret }}
            {{- end }}
          {{- end }}
      containers:
        - name: erato-backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3130
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          env:
            - name: DATABASE_URL
              {{- include "erato.postgresValueOrValueFrom" . | nindent 14 }}
            - name: ENVIRONMENT
              value: {{ .Values.global.environment }}
            {{- if .Values.backend.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.backend.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.backend.extraEnvVarsCM .Values.backend.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.backend.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.backend.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.backend.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.backend.extraEnvVarsSecret }}
            {{- end }}
          {{- end }}
          {{- if or (and .Values.backend.configFile.secretName .Values.backend.configFile.secretKey) .Values.backend.extraVolumeMounts }}
          volumeMounts:
            {{- if and .Values.backend.configFile.secretName .Values.backend.configFile.secretKey }}
            - name: erato-config
              mountPath: /app/erato.toml
              subPath: erato.toml
              readOnly: true
            {{- end }}
            {{- if .Values.backend.extraVolumeMounts }}
            {{- toYaml .Values.backend.extraVolumeMounts | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- if or (and .Values.backend.configFile.secretName .Values.backend.configFile.secretKey) .Values.backend.extraVolumes }}
      volumes:
        {{- if and .Values.backend.configFile.secretName .Values.backend.configFile.secretKey }}
        - name: erato-config
          secret:
            secretName: {{ .Values.backend.configFile.secretName }}
            items:
              - key: {{ .Values.backend.configFile.secretKey }}
                path: erato.toml
        {{- end }}
        {{- if .Values.backend.extraVolumes }}
        {{- toYaml .Values.backend.extraVolumes | nindent 8 }}
        {{- end }}
      {{- end }}
