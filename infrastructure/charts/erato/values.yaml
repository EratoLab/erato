global:
  # A opaque marker to signify the environment. This may be forwarded to diagnostic/observability tools to signify the environment,
  # but is never parsed/interpreted by the application to trigger environment-specific behavior.
  environment: production
  imagePullSecrets: []

## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

ingress:
  enabled: true
  host: app.erato.internal
  className: nginx
  annotations: {}
  tls:
    enabled: false
    secretName: ""

oauth2Proxy:
  enabled: true
  image:
    repository: quay.io/oauth2-proxy/oauth2-proxy
    tag: v7.8.1
    pullPolicy: IfNotPresent
    pullSecrets: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumes: []
  extraVolumeMounts: []
  # Full configuration file content for oauth2-proxy
  config: |
    # Example configuration - replace with your own
    # http_address = "0.0.0.0:4180"
    # upstreams = ["http://localhost:8080"]
    # email_domains = ["*"]
    # cookie_secret = ""
    # cookie_secure = true
    # skip_auth_regex = ["^/health", "^/metrics"]
  ## @param oauth2Proxy.deploymentAnnotations Annotations to add to the oauth2-proxy deployment
  ##
  deploymentAnnotations: {}
  ## @param oauth2Proxy.podAnnotations Annotations to add to the oauth2-proxy pod
  ##
  podAnnotations: {}
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi

# Backend configuration
backend:
  image:
    repository: harbor.imassage.me/erato/app
    tag: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumes: []
  extraVolumeMounts: []
  ## @param backend.deploymentAnnotations Annotations to add to the backend deployment
  ##
  deploymentAnnotations: {}
  ## @param backend.podAnnotations Annotations to add to the backend pod
  ##
  podAnnotations: {}
  # Optional configuration for mounting erato.toml from a secret, configMap, or inline content
  configFile:
    # Name of the secret containing the erato.toml file
    secretName: ""
    # Key in the secret that contains the erato.toml content
    secretKey: ""
    # Name of the configMap containing the erato.toml file (alternative to secretName/secretKey)
    configMapName: ""
    # Key in the configMap that contains the erato.toml content
    configMapKey: ""
    # Inline content for erato.toml (alternative to secret/configMap)
    inlineContent: ""
  # Optional list of additional config files to mount (e.g., *.auto.erato.toml files)
  # Each item can use secret, configMap, or inline content just like configFile above
  extraConfigFiles: []
  # Example:
  # extraConfigFiles:
  #   - name: mcp-servers
  #     secretName: mcp-config-secret
  #     secretKey: mcp-servers.toml
  #   - name: additional-config
  #     configMapName: additional-config-cm
  #     configMapKey: additional.toml
  #   - name: inline-config
  #     inlineContent: |
  #       [mcp_servers.example]
  #       ...
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  service:
    type: ClusterIP
    port: 8080
  envSecrets: []

postgresql:
  # set postgresql.enabled to be false to disable deploy of a PostgreSQL database and use an
  # existing external PostgreSQL database
  enabled: false

  # If postgresql.enabled is falsse, you can set the following values to connect to an existing
  # external PostgreSQL database
  external:
    # TODO: Align to what e.g. bitnami/keycloak chart does to connect to an external database
    # Can either be value or valueFrom
    connectionString:
      value: "postgresql://postgres:postgres@localhost:5432/postgres"
