erato:
  commonAnnotations:
    reloader.stakater.com/auto: "true"
  
  ingress:
    enabled: true
    host: app.erato.internal
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/proxy-buffer-size: 8k
      nginx.ingress.kubernetes.io/proxy-buffers-number: '4'
      nginx.ingress.kubernetes.io/proxy-body-size: 0

  backend:
    image:
      repository: harbor.imassage.me/erato/app
      tag: "latest"
      pullPolicy: Always
    configFile:
      secretName: erato-local-erato-toml-secret
      secretKey: erato.toml
      # `useAlt` is not part of the `erato` chart
      # If it is provided, `config/erato.alt.toml` will be used instead of `config/erato.toml`
      useAlt: false
    extraConfigFiles:
      - name: frontend-env
        inlineContent: |
          [frontend.additional_environment]
          FOO_BAR = "true"
  
  oauth2Proxy:
    enabled: true
    config: |
      http_address = "0.0.0.0:4180"

      # Hostname of the app. Structure <release_name>-erato-app
      upstreams = ["http://erato-local-erato-app:3130"]
      email_domains = ["*"]
      cookie_secret = "0123456789abcdef0123456789abcdef"  # Replace in production
      cookie_secure = false
      provider = "oidc"
      client_id = "erato-app"
      client_secret = "ZXJhdG8tc2VjcmV0"  # Replace in production
      skip_oidc_discovery = true
      oidc_issuer_url = "http://erato-local-dex.erato-local-ns.svc.cluster.local:5556"
      login_url = "http://dex.erato.internal/auth"
      redeem_url = "http://erato-local-dex.erato-local-ns.svc.cluster.local:5556/token"
      oidc_jwks_url = "http://erato-local-dex.erato-local-ns.svc.cluster.local:5556/keys"
      redirect_url = "http://app.erato.internal/oauth2/callback"
      skip_auth_regex = ["^/health", "^/metrics"]
      pass_authorization_header = true
      pass_access_token = true
      pass_user_headers = true

      insecure_oidc_skip_issuer_verification = true

  postgresql:
    enabled: false
    external:
      connectionString:
        valueFrom:
          secretKeyRef:
            # This will be created by the postgres-cluster.yaml template
            name: erato-local-postgres-app
            key: uri

dex:
  enabled: true
  image:
    repository: dexidp/dex
    tag: v2.41.1
    pullPolicy: IfNotPresent
  
  ingress:
    enabled: true
    host: dex.erato.internal
    className: nginx
  
  config: |
    issuer: http://dex.erato.internal
    storage:
      type: memory
    oauth2:
      skipApprovalScreen: true
    web:
      http: 0.0.0.0:5556
    staticClients:
    - id: erato-app
      redirectURIs:
      - 'http://app.erato.internal/oauth2/callback'
      name: 'Erato App'
      secret: ZXJhdG8tc2VjcmV0
    enablePasswordDB: true
    staticPasswords:
    - email: "admin@example.com"
      hash: "$2y$10$EI3YbB3STkWvAzAyZ/fU/ehRT6M5ActxvZS9rZ1fXmTV2zxYNgUaK" # password: admin
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
    
    - email: "user01@example.com"
      hash: "$2y$10$EI3YbB3STkWvAzAyZ/fU/ehRT6M5ActxvZS9rZ1fXmTV2zxYNgUaK" # password: admin
      username: "user"
      userID: "08a8684b-db88-4b73-90a9-3cd166100001"

    - email: "user02@example.com"
      hash: "$2y$10$EI3YbB3STkWvAzAyZ/fU/ehRT6M5ActxvZS9rZ1fXmTV2zxYNgUaK" # password: admin
      username: "user"
      userID: "08a8684b-db88-4b73-90a9-3cd166100002"

    - email: "user03@example.com"
      hash: "$2y$10$EI3YbB3STkWvAzAyZ/fU/ehRT6M5ActxvZS9rZ1fXmTV2zxYNgUaK" # password: admin
      username: "user"
      userID: "08a8684b-db88-4b73-90a9-3cd166100003"

    - email: "user04@example.com"
      hash: "$2y$10$EI3YbB3STkWvAzAyZ/fU/ehRT6M5ActxvZS9rZ1fXmTV2zxYNgUaK" # password: admin
      username: "user"
      userID: "08a8684b-db88-4b73-90a9-3cd166100004"

    - email: "user05@example.com"
      hash: "$2y$10$EI3YbB3STkWvAzAyZ/fU/ehRT6M5ActxvZS9rZ1fXmTV2zxYNgUaK" # password: admin
      username: "user"
      userID: "08a8684b-db88-4b73-90a9-3cd166100005"

    - email: "user06@example.com"
      hash: "$2y$10$EI3YbB3STkWvAzAyZ/fU/ehRT6M5ActxvZS9rZ1fXmTV2zxYNgUaK" # password: admin
      username: "user"
      userID: "08a8684b-db88-4b73-90a9-3cd166100006"

# Main chart values
postgresql:
  enabled: true
  instances: 1
  image:
    repository: ghcr.io/cloudnative-pg/postgresql
    tag: "17.2"
  storage:
    size: 2Gi