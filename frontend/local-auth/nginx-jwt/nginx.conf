load_module modules/ngx_http_js_module.so;

events {
    worker_connections 1024;
}

http {
    js_import main from /etc/nginx/main.js;

    # Declare the variable that will be set by njs
    js_var $auth_jwt "";

    # Backend upstream servers
    upstream frontend {
        server host.docker.internal:3000;
    }
    
    upstream backend {
        server host.docker.internal:3130;
    }

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Logout route - clears authentication cookie
        location = /logout {
            js_content main.handleLogout;
        }

        # Frontend routes - handle everything except /api and /logout
        location / {
            js_content main.handleRequest;
        }

        # API routes - handle with JWT generation
        location /api/ {
            js_content main.handleRequest;
        }

        # Internal location for frontend
        location @frontend {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Forward the JWT from the njs variable
            proxy_set_header Authorization $auth_jwt;
        }

        # Internal location for backend API
        location @backend {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Forward the JWT from the njs variable
            proxy_set_header Authorization $auth_jwt;
        }
    }
}
