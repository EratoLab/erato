default:
    just --list

storybook:
    pnpm run storybook

# Generate the OpenAPI client based on the OpenAPI spec in the backend.
codegen:
    pnpm run codegen

install:
    pnpm install

dev:
    cd local-auth && docker compose up --force-recreate --detach
    echo "Proxied local server with auth will be available at http://localhost:4180"
    pnpm run dev

dev_keycloak:
    cd local-auth && docker compose -f docker-compose.keycloak.yml up --force-recreate --detach
    echo "Proxied local server with auth will be available at http://localhost:4180"
    pnpm run dev

dev_entra_id:
    #!/usr/bin/env sh
    cd local-auth
    if [ ! -f "oauth2-proxy-entra-id.cfg" ]; then
        ./generate_entra_id_config.sh
    fi
    docker compose -f docker-compose.entra-id.yml up --force-recreate --detach
    echo "Proxied local server with Entra ID auth will be available at http://localhost:4180"
    cd .. && pnpm run dev

dev_nginx_jwt:
    cd local-auth && docker compose -f docker-compose.nginx-jwt.yml up --force-recreate --detach
    echo "Proxied local server with Nginx JWT auth will be available at http://localhost:4180"
    echo "Usage: Add ?user=<username> to any URL to authenticate"
    echo "Example: http://localhost:4180/?user=alice"
    echo "To logout: Visit http://localhost:4180/logout"
    pnpm run dev

start:
    pnpm run start

format:
    pnpm exec prettier . --write

check-format:
    pnpm exec prettier . --check

lint:
    pnpm typecheck && pnpm lint:strict

lint-fix:
    pnpm run lint:fix

check:
    pnpm run check

type-check:
    pnpm run typecheck

strict-check:
    pnpm run lint:strict && pnpm run typecheck

fix-imports:
    pnpm exec eslint --fix --rule 'import/order: error' --rule '@typescript-eslint/consistent-type-imports: error' .

# Run all tests once (CI mode)
test:
    pnpm exec vitest run

# Run tests in watch mode (development mode)
test-watch:
    pnpm run test

# Run tests in watch mode with UI
test-ui:
    pnpm run test:ui

# Run tests with coverage report
test-coverage:
    pnpm run coverage

# Run tests for a specific file or pattern (single run)
test-file pattern:
    pnpm exec vitest run {{pattern}}

# Run tests with verbose output (single run)
test-verbose:
    pnpm exec vitest run --reporter verbose

# Run tests and update snapshots (single run)
test-update:
    pnpm exec vitest run -u

# Run all checks including tests (single run)
check-all: check
    pnpm exec vitest run

